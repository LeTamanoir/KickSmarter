{ parameter
    (or (or (pair %claim_milestone (nat %id) (nat %milestone_id))
            (pair %desaprove_milestone (nat %id) (nat %milestone_id)))
        (or (nat %fund_project)
            (pair %post_project
               (pair (string %cid_metadata) (timestamp %funding_due_date))
               (list %milestones
                  (pair (pair (string %cid_metadata) (timestamp %due_date))
                        (mutez %required_amount)
                        (timestamp %start_date)))))) ;
  storage
    (pair (pair (pair (big_map %addr_to_projects address (list nat))
                      (big_map %investors address mutez))
                (big_map %project_makers
                   address
                   (pair (nat %nb_project_in_progress) (nat %nb_total_projects)))
                (big_map %projects
                   nat
                   (pair (pair (pair (pair (string %cid_metadata) (mutez %current_amount))
                                     (timestamp %funding_due_date)
                                     (timestamp %funding_start_date))
                               (pair (nat %id) (map %investors address mutez))
                               (map %milestones
                                  nat
                                  (pair (pair (string %cid_metadata) (timestamp %due_date))
                                        (mutez %required_amount)
                                        (timestamp %start_date)))
                               (address %owner))
                         (mutez %target_amount)
                         (map %votes nat (pair (mutez %total_weight) (set %voters address))))))
          (nat %total_projects)) ;
  code { UNPAIR ;
         IF_LEFT
           { IF_LEFT
               { SENDER ;
                 DUP 3 ;
                 CAR ;
                 CDR ;
                 CDR ;
                 DUP 3 ;
                 CAR ;
                 GET ;
                 IF_NONE { PUSH string "invalid project ID" ; FAILWITH } {} ;
                 DUP ;
                 CAR ;
                 CDR ;
                 CDR ;
                 CDR ;
                 DUP 3 ;
                 COMPARE ;
                 EQ ;
                 IF {} { PUSH string "only project owner can claim milestone" ; FAILWITH } ;
                 DUP ;
                 CAR ;
                 CDR ;
                 CDR ;
                 CAR ;
                 DUP 4 ;
                 CDR ;
                 GET ;
                 IF_NONE { PUSH string "invalid milestone ID" ; FAILWITH } {} ;
                 PUSH string "milestone must have started to be claimed" ;
                 NOW ;
                 DUP 3 ;
                 CAR ;
                 CDR ;
                 COMPARE ;
                 GT ;
                 IF { DROP } { FAILWITH } ;
                 PUSH mutez 0 ;
                 DUP 2 ;
                 CDR ;
                 CAR ;
                 COMPARE ;
                 NEQ ;
                 IF {} { PUSH string "milestone already claimed" ; FAILWITH } ;
                 DIG 2 ;
                 CONTRACT unit ;
                 IF_NONE { PUSH string "Contract not found." ; FAILWITH } {} ;
                 DUP 2 ;
                 CDR ;
                 CAR ;
                 UNIT ;
                 TRANSFER_TOKENS ;
                 DUP 5 ;
                 DUP 6 ;
                 CAR ;
                 DUP ;
                 CDR ;
                 DIG 7 ;
                 CAR ;
                 CDR ;
                 CDR ;
                 DUP 7 ;
                 DUP 8 ;
                 CAR ;
                 DUP ;
                 CDR ;
                 DUP ;
                 CDR ;
                 DIG 10 ;
                 CAR ;
                 CDR ;
                 CDR ;
                 CAR ;
                 DUP 11 ;
                 DIG 11 ;
                 CDR ;
                 PUSH mutez 0 ;
                 UPDATE 1 ;
                 UPDATE 2 ;
                 SOME ;
                 DUP 12 ;
                 CDR ;
                 UPDATE ;
                 UPDATE 1 ;
                 UPDATE 2 ;
                 UPDATE 2 ;
                 UPDATE 1 ;
                 SOME ;
                 DIG 6 ;
                 CAR ;
                 UPDATE ;
                 UPDATE 2 ;
                 UPDATE 2 ;
                 UPDATE 1 ;
                 NIL operation ;
                 DIG 2 ;
                 CONS }
               { DUP 2 ;
                 CAR ;
                 CDR ;
                 CDR ;
                 DUP 2 ;
                 CAR ;
                 GET ;
                 IF_NONE { PUSH string "project not found" ; FAILWITH } {} ;
                 DUP ;
                 CAR ;
                 CDR ;
                 CDR ;
                 CAR ;
                 DUP 3 ;
                 CDR ;
                 GET ;
                 IF_NONE { PUSH string "milestone not found" ; FAILWITH } {} ;
                 PUSH string "milestone must be finished to be desaproved" ;
                 NOW ;
                 DIG 2 ;
                 CAR ;
                 CDR ;
                 COMPARE ;
                 LT ;
                 IF { DROP } { FAILWITH } ;
                 SENDER ;
                 DUP 2 ;
                 CAR ;
                 CDR ;
                 CAR ;
                 CDR ;
                 DUP 2 ;
                 GET ;
                 IF_NONE { PUSH string "sender has not voted yet" ; FAILWITH } {} ;
                 DUP 5 ;
                 DUP 6 ;
                 CAR ;
                 DUP ;
                 CDR ;
                 DIG 7 ;
                 CAR ;
                 CDR ;
                 CDR ;
                 DUP 7 ;
                 DUP 8 ;
                 CDR ;
                 DUP 9 ;
                 CDR ;
                 CDR ;
                 DIG 9 ;
                 CDR ;
                 CDR ;
                 DUP 11 ;
                 CDR ;
                 GET ;
                 IF_NONE
                   { EMPTY_SET address ; DIG 9 ; PUSH bool True ; SWAP ; UPDATE ; DIG 8 }
                   { DUP ;
                     CDR ;
                     DIG 10 ;
                     PUSH bool True ;
                     SWAP ;
                     UPDATE ;
                     DIG 9 ;
                     DIG 2 ;
                     CAR ;
                     ADD } ;
                 PAIR ;
                 SOME ;
                 DUP 9 ;
                 CDR ;
                 UPDATE ;
                 UPDATE 2 ;
                 UPDATE 2 ;
                 SOME ;
                 DIG 5 ;
                 CAR ;
                 UPDATE ;
                 UPDATE 2 ;
                 UPDATE 2 ;
                 UPDATE 1 ;
                 NIL operation } }
           { IF_LEFT
               { AMOUNT ;
                 PUSH mutez 0 ;
                 DUP 2 ;
                 COMPARE ;
                 GT ;
                 IF {} { PUSH string "sent amount must be at least 1 mutez" ; FAILWITH } ;
                 DUP 3 ;
                 CAR ;
                 CDR ;
                 CDR ;
                 DUP 3 ;
                 GET ;
                 IF_NONE { PUSH string "project not found" ; FAILWITH } {} ;
                 PUSH string "Project funding period has ended" ;
                 DUP 2 ;
                 CAR ;
                 CAR ;
                 CDR ;
                 CAR ;
                 NOW ;
                 COMPARE ;
                 LT ;
                 IF { DROP } { FAILWITH } ;
                 PUSH string "Project is already fully funded" ;
                 DUP 2 ;
                 CDR ;
                 CAR ;
                 DUP 4 ;
                 DUP 4 ;
                 CAR ;
                 CAR ;
                 CAR ;
                 CDR ;
                 ADD ;
                 COMPARE ;
                 LE ;
                 IF { DROP } { FAILWITH } ;
                 SENDER ;
                 DUP 2 ;
                 CAR ;
                 CDR ;
                 CAR ;
                 CDR ;
                 DUP 2 ;
                 GET ;
                 IF_NONE
                   { DUP 2 ; CAR ; CDR ; CAR ; CDR ; DUP 4 ; SOME ; DUP 3 ; UPDATE }
                   { DUP 3 ;
                     CAR ;
                     CDR ;
                     CAR ;
                     CDR ;
                     DUP 2 ;
                     DIG 2 ;
                     ADD ;
                     SOME ;
                     DUP 3 ;
                     UPDATE } ;
                 DUP 3 ;
                 DUP 4 ;
                 CAR ;
                 DUP ;
                 CAR ;
                 DUP ;
                 CAR ;
                 DUP 8 ;
                 DIG 7 ;
                 CAR ;
                 CAR ;
                 CAR ;
                 CDR ;
                 ADD ;
                 UPDATE 2 ;
                 UPDATE 1 ;
                 UPDATE 1 ;
                 UPDATE 1 ;
                 DUP 6 ;
                 CAR ;
                 CAR ;
                 CDR ;
                 DUP 4 ;
                 GET ;
                 IF_NONE
                   { DUP 6 ; CAR ; CAR ; CDR ; DIG 4 ; SOME ; DIG 4 ; UPDATE }
                   { DUP 7 ; CAR ; CAR ; CDR ; DIG 5 ; DIG 2 ; ADD ; SOME ; DIG 4 ; UPDATE } ;
                 DUP 5 ;
                 DUP 6 ;
                 CAR ;
                 DUP ;
                 CDR ;
                 DIG 7 ;
                 CAR ;
                 CDR ;
                 CDR ;
                 DUP 6 ;
                 DIG 6 ;
                 CAR ;
                 DUP ;
                 CDR ;
                 DUP ;
                 CAR ;
                 DIG 9 ;
                 UPDATE 2 ;
                 UPDATE 1 ;
                 UPDATE 2 ;
                 UPDATE 1 ;
                 SOME ;
                 DIG 6 ;
                 UPDATE ;
                 UPDATE 2 ;
                 UPDATE 2 ;
                 UPDATE 1 ;
                 DUP ;
                 CAR ;
                 DUP ;
                 CAR ;
                 DIG 3 ;
                 UPDATE 2 ;
                 UPDATE 1 ;
                 UPDATE 1 }
               { PUSH nat 0 ;
                 DUP 2 ;
                 CAR ;
                 CAR ;
                 SIZE ;
                 COMPARE ;
                 GT ;
                 IF {} { PUSH string "metadata must be non-empty" ; FAILWITH } ;
                 PUSH nat 0 ;
                 DUP 2 ;
                 CDR ;
                 SIZE ;
                 COMPARE ;
                 GT ;
                 IF {} { PUSH string "milestones must be non-empty" ; FAILWITH } ;
                 PUSH string "fundingDueDate must be in the future" ;
                 NOW ;
                 DUP 3 ;
                 CAR ;
                 CDR ;
                 COMPARE ;
                 GT ;
                 IF { DROP } { FAILWITH } ;
                 NOW ;
                 PUSH int 1 ;
                 DUP 2 ;
                 ADD ;
                 DUP 3 ;
                 CDR ;
                 ITER { PUSH mutez 0 ;
                        DUP 2 ;
                        CDR ;
                        CAR ;
                        COMPARE ;
                        GT ;
                        IF {} { PUSH string "milestone requiredAmount must be positive" ; FAILWITH } ;
                        PUSH string "milestone startDate must be in the future" ;
                        DIG 3 ;
                        DUP 3 ;
                        CDR ;
                        CDR ;
                        COMPARE ;
                        GT ;
                        IF { DROP } { FAILWITH } ;
                        PUSH string "milestone dueDate must be in the future" ;
                        DUP 3 ;
                        DUP 3 ;
                        CAR ;
                        CDR ;
                        COMPARE ;
                        GT ;
                        IF { DROP } { FAILWITH } ;
                        PUSH int 1 ;
                        DIG 2 ;
                        ADD ;
                        SWAP ;
                        CAR ;
                        CDR } ;
                 DROP 2 ;
                 EMPTY_MAP nat (pair (pair string timestamp) mutez timestamp) ;
                 DUP 2 ;
                 CDR ;
                 ITER { SOME ; PUSH nat 0 ; UPDATE } ;
                 SENDER ;
                 DUP 4 ;
                 CDR ;
                 PUSH mutez 0 ;
                 DUP 5 ;
                 CDR ;
                 ITER { CDR ; CAR ; ADD } ;
                 EMPTY_MAP nat (pair mutez (set address)) ;
                 SWAP ;
                 PAIR ;
                 DUP 3 ;
                 DIG 4 ;
                 PAIR ;
                 EMPTY_MAP address mutez ;
                 DUP 4 ;
                 PAIR ;
                 PAIR ;
                 NOW ;
                 DUP 6 ;
                 CAR ;
                 CDR ;
                 PAIR ;
                 PUSH mutez 0 ;
                 DIG 6 ;
                 CAR ;
                 CAR ;
                 PAIR ;
                 PAIR ;
                 PAIR ;
                 PAIR ;
                 DUP 4 ;
                 CAR ;
                 CDR ;
                 CAR ;
                 DUP 4 ;
                 GET ;
                 IF_NONE
                   { PUSH nat 0 ; PUSH nat 0 }
                   { PUSH nat 1 ; DUP 2 ; CDR ; ADD ; PUSH nat 1 ; DIG 2 ; CAR ; ADD } ;
                 PAIR ;
                 DUP 5 ;
                 DUP 6 ;
                 CAR ;
                 DUP ;
                 CDR ;
                 DUP 8 ;
                 CAR ;
                 CDR ;
                 CAR ;
                 DIG 4 ;
                 SOME ;
                 DUP 8 ;
                 UPDATE ;
                 UPDATE 1 ;
                 UPDATE 2 ;
                 UPDATE 1 ;
                 DUP ;
                 CAR ;
                 DUP ;
                 CDR ;
                 DUP 7 ;
                 CAR ;
                 CDR ;
                 CDR ;
                 DIG 4 ;
                 SOME ;
                 DUP 6 ;
                 UPDATE ;
                 UPDATE 2 ;
                 UPDATE 2 ;
                 UPDATE 1 ;
                 DUP ;
                 CAR ;
                 DUP ;
                 CAR ;
                 DUP 6 ;
                 CAR ;
                 CAR ;
                 CAR ;
                 DUP 7 ;
                 CAR ;
                 CAR ;
                 CAR ;
                 DUP 7 ;
                 GET ;
                 IF_NONE { NIL nat } {} ;
                 DIG 5 ;
                 CONS ;
                 SOME ;
                 DIG 5 ;
                 UPDATE ;
                 UPDATE 1 ;
                 UPDATE 1 ;
                 UPDATE 1 ;
                 PUSH nat 1 ;
                 DIG 2 ;
                 CDR ;
                 ADD ;
                 UPDATE 2 } ;
             NIL operation } ;
         PAIR } }

